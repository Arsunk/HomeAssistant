#https://home-assistant.io/components/sensor/

####################################################
#                                                  #
#                      TEMPLATE                    #
#                                                  #
####################################################

#https://home-assistant.io/components/sensor.template/
  - platform: template
    sensors:

      duedate:
        unit_of_measurement: 'Days'
        value_template: '{{ (( as_timestamp(strptime("2019-03-26 00:00:00" , "%Y-%m-%dT%H:%M:%S")) - as_timestamp(now()) )/ (3600*24)) | round(0) }}'

      approxwattage:
        unit_of_measurement: 'W'
        value_template:  '{{states("sensor.ups_load")|int*9}}'

      since_last_boot_templated:
        value_template: >-
          {%- set slb = states.sensor.since_last_boot.state.split(' ') -%}
          {%- set count = slb | length -%}
          {%- set hms = slb[count - 1] -%}
          {%- set hms_trimmed = hms.split('.')[0] -%}
          {%- set hms_split = hms_trimmed.split(':') -%}
          {%- set hours = hms_split[0] | int -%}
          {%- if count == 3 -%}
            {{ slb[0] ~ ' ' ~ slb[1] ~ ' ' }}
          {%- endif -%}
          {%- if hours > 0 -%}
            {%- if hours == 1 -%}
              1 hour
            {%- else -%}
              {{ hours }} hours
            {%- endif -%}
          {%- endif -%}

      setpoint:
        unit_of_measurement: 'Â°F'
        value_template: "{{ state_attr('climate.linear_heating', 'temperature') }}"

      fanstate:
        value_template: "{{ state_attr('climate.linear_heating', 'fan_state') }}"

      fanmode:
        value_template: "{{ state_attr('climate.linear_heating', 'fan_mode') }}"

      operatingstate:
        value_template: "{{ state_attr('climate.linear_heating', 'operating_state') }}"

      operationmode:
        value_template: "{{ state_attr('climate.linear_heating', 'operation_mode') }}"

#Thanks to @ccostan for the code here.  Some Intresting HA stats
      sensor_count:
        friendly_name: 'Number of Sensors'
        value_template: >
          {%- set domains = ['sensor'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      automation_count:
        friendly_name: 'Number of Automations'
        value_template: >
          {%- set domains = ['automation'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      script_count:
        friendly_name: 'Number of Scripts'
        value_template: >
          {%- set domains = ['script'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      switch_count:
        friendly_name: 'Number of Switches'
        value_template: >
          {%- set domains = ['switch'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      binary_sensor_count:
        friendly_name: 'Number of Binary Sensors'
        value_template: >
          {%- set domains = ['binary_sensor'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      lights_count:
        friendly_name: 'Number of Lights'
        value_template: >
          {%- set domains = ['light'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      tracker_count:
        friendly_name: 'Number of Devices'
        value_template: >
          {%- set domains = ['device_tracker'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

####################################################
#                                                  #
#            END OF CONFIGURATION FILE             #
#                                                  #
####################################################
