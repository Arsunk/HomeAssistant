#https://home-assistant.io/components/sensor/

####################################################
#                                                  #
#                      TEMPLATE                    #
#                                                  #
####################################################

#https://home-assistant.io/components/sensor.template/
  - platform: template
    sensors:

      approxwattage:
        unit_of_measurement: 'W'
        value_template:  '{{states("sensor.ups_load")|int*9}}'

      setpoint:
        unit_of_measurement: 'Â°F'
        value_template: "{{ state_attr('climate.linear_heating', 'temperature') }}"

      fanstate:
        value_template: "{{ state_attr('climate.linear_heating', 'fan_state') }}"

      fanmode:
        value_template: "{{ state_attr('climate.linear_heating', 'fan_mode') }}"

      operatingstate:
        value_template: "{{ state_attr('climate.linear_heating', 'operating_state') }}"

      operationmode:
        value_template: "{{ state_attr('climate.linear_heating', 'operation_mode') }}"

      sunset:
        value_template: '{% set timestamp = as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom("%I:%M") %} {{ timestamp.lstrip("0") }}'
        unit_of_measurement: 'PM'

      sunrise:
        value_template: '{% set timestamp = as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom("%I:%M") %} {{ timestamp.lstrip("0") }}'
        unit_of_measurement: 'AM'

      daylight:
        value_template: >
          {% set nr = as_timestamp(state_attr('sun.sun','next_rising')) %}
          {% set ns = as_timestamp(state_attr('sun.sun','next_setting')) %}
          {% if nr > ns %}
            {% set nr = nr - 60*60*24 %}
          {% endif %}
          {{ (ns - nr)|timestamp_custom('%H:%M',false) }}
 

#Thanks to @ccostan for the code here.  Some Intresting HA stats
      sensor_count:
        entity_id: []
        friendly_name: 'Number of Sensors'
        value_template: >
          {%- set domains = ['sensor'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      automation_count:
        entity_id: []
        friendly_name: 'Number of Automations'
        value_template: >
          {%- set domains = ['automation'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      script_count:
        entity_id: []
        friendly_name: 'Number of Scripts'
        value_template: >
          {%- set domains = ['script'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      switch_count:
        entity_id: []
        friendly_name: 'Number of Switches'
        value_template: >
          {%- set domains = ['switch'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      binary_sensor_count:
        entity_id: []
        friendly_name: 'Number of Binary Sensors'
        value_template: >
          {%- set domains = ['binary_sensor'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      lights_count:
        entity_id: []
        friendly_name: 'Number of Lights'
        value_template: >
          {%- set domains = ['light'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      tracker_count:
        entity_id: []
        friendly_name: 'Number of Devices'
        value_template: >
          {%- set domains = ['device_tracker'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      zwave_count:
        entity_id: []
        friendly_name: 'Zwave Devices'
        value_template: >
          {%- set domains = ['zwave'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

      garage_car_present:
        value_template: '{% if states.cover.garage_door %}
            {% if states.cover.garage_door.state == "open" %}
              n/a
            {% elif ((states.cover.garage_door.attributes["distance_sensor"] > 100) and (states.cover.garage_door.attributes["distance_sensor"] < 150)) %}
              Yes
            {% else %}
              No
            {% endif %}
            {% else %}
            n/a
            {% endif %}'

####################################################
#                                                  #
#            END OF CONFIGURATION FILE             #
#                                                  #
####################################################
